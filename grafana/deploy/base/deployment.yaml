kind: Deployment
apiVersion: apps/v1
metadata:
  name: perf-grafana
  labels:
    app: perf-monitoring
    app.kubernetes.io/component: perf-grafana
    app.kubernetes.io/instance: perf-monitoring
    app.kubernetes.io/name: perf-monitoring
    component: perf-grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: perf-monitoring
      component: perf-grafana
  template:
    metadata:
      labels:
        app: perf-monitoring
        app.kubernetes.io/component: perf-grafana
        app.kubernetes.io/instance: perf-monitoring
        app.kubernetes.io/name: perf-monitoring
        component: perf-grafana
    spec:
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      containers:
        - resources:
            limits:
              cpu: 500m
              memory: 1Gi
            requests:
              cpu: 200m
              memory: 512Mi
          name: perf-grafana
          securityContext:
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          imagePullPolicy: Always
          image: >-
            grafana/grafana
          env:
          - name: GF_SERVER_HTTP_PORT
            value: "3000"
          - name: GF_SECURITY_ADMIN_PASSWORD
            value: "secret"
      securityContext:
        runAsNonRoot: true
---
kind: Service
apiVersion: v1
metadata:
  name: perf-grafana-service
  labels:
    app.kubernetes.io/component: perf-grafana
    app.kubernetes.io/instance: perf-monitoring
    app.kubernetes.io/name: perf-monitoring
spec:
  ports:
    - name: http
      protocol: TCP
      port: 3000
      targetPort: 3000
  selector:
    app.kubernetes.io/component: perf-grafana
    app.kubernetes.io/instance: perf-monitoring
    app.kubernetes.io/name: perf-monitoring